import Head from "next/head";
import Navbar from "@/components/Navbar";
import {Container, Heading, Spinner, useToast} from "@chakra-ui/react";
import {useEffect, useState} from "react";
import {useRouter} from "next/router";
import axiosInstance from "@/lib/axios";
import {getToken, setToken} from "@/lib/functions";
import { toastPosition } from "@/lib/variables";

export default function Home() {
  const router = useRouter();
  const [sessionExpired, setSessionExpired] = useState(false);
  const [courses, setCourses] = useState([]);
  const [loading, setLoading] = useState(true);
  const [user, setUser] = useState({});
  const toast = useToast();
  
  useEffect(() => {
    const token = getToken();
    if (!token) {
      toast({
        title: "Please login first",
        status: "error",
        duration: 4000,
        isClosable: true,
        position: toastPosition,
      })
      router.push("/login");
      return;
    }
    const fetchCourses = async () => {
      try {
        const res = await axiosInstance.get("/courses", {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });
    
        setCourses(res.data?.data?.courses || []);
      } catch (err) {
        console.log(err);
        setToken(null);
        toast({
          title: "Your session has expired",
          status: "error",
          duration: 1500,
          isClosable: true,
          position: toastPosition,
        });
        router.push("/login");
      } finally {
        setLoading(false);
      }
    };

    const fetchUser = async () => {
      try {
        const res = await axiosInstance.get("/me", {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });
        setUser(res.data?.data);
      } catch (err) {
        console.log(err);
        setToken(null);
        toast({
          title: "Your session has expired",
          status: "error",
          duration: 1500,
          isClosable: true,
          position: toastPosition,
        });
        router.push("/login");
      }
    };

    fetchUser();
    fetchCourses(); // Panggil fungsi fetchCourses
}, [router]);


  // Tampilkan loading spinner saat fetching
  if (loading) {
    return (
      <Container>
        <Spinner /> {/* Menampilkan spinner loading */}
      </Container>
    );
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar fullName={user?.full_name} />
      <main>
        <Container>
          <Heading>Your Courses</Heading>
          {/* Render daftar kursus jika ada */}
          
        </Container>
      </main>
    </>
  );
}
